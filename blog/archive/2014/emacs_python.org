#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil TeX:nil
#+CATEGORY: 技術メモ, Emacs
#+TAGS: Python
#+DESCRIPTION:Emacs で Python 開発環境を構築
#+TITLE: Emacs で Python 開発環境を構築
* はじめに
  coursera で Python をつかう講座を 2 つとった.
  - [[https://www.coursera.org/course/compinvesting1][Computational Investing, Part I | Coursera]]
  - [[https://www.coursera.org/course/musictech][Survey of Music Technology | Coursera]]

  もちろん Emacs で開発環境をつくったので, 構築メモ.

#+BEGIN_HTML
<img alt="" src="http://futurismo.biz/wp-content/uploads/emacs_logo.jpg"/>
#+END_HTML

* 入力支援
  python.el は公式, python-mode.el は Python コミュニティによって作成されたもの.
  
** python
   Emacs にデフォルトではいっているやつ.

** python-mode
   Python コミュニティによって作成されたもの.
   - [[https://github.com/emacsmirror/python-mode][emacsmirror/python-mode]]   
   - [[https://launchpad.net/python-mode/][python-mode.el in Launchpad]]
   - [[http://tnt.math.se.tmu.ac.jp/~tetsushi/nzmath/emacs-python-mode.html][Guide - Software - Emacs - python-mode]]

   ショートカットがまとまっている.
   - [[http://ikautimituaki.hatenablog.com/entry/20111120/1321806070][python-mode の便利なショートカットまとめ - まったりいんふぉまてぃくすめもらんだむ]]

** インデント設定
   4 で設定.

#+begin_src emacs-lisp
(add-hook 'python-mode-hook
                   '(lambda ()
                        (setq indent-tabs-mode nil)
                        (setq indent-level 4)
                        (setq python-indent 4)
                        (setq tab-width 4)))
#+end_src

* コードリーディング
** helm-etags-plus
   ダグジャンプ. ctags を利用する.
   そして, ctags を Emacs から利用するために, 
   最近は helm-etags-plus なるものを使っていたりする.

   - [[https://github.com/jixiuf/helm-etags-plus][jixiuf/helm-etags-plus]]

#+begin_src emacs-lisp
(require 'helm-etags+)
#+end_src

#+begin_src bash
$ ctags -o TAGS *.py
#+end_src

** swoop
   ctags はメソッドの定義にはジャンプできるけど, 
   変数の宣言にジャンプできない.

   変数の宣言に飛びたいときは, swoop が最近は大のお気に入り.

   - [[http://fukuyama.co/emacs-swoop][Emacs バッファ内高速ナビゲーション Swoop.el を作りました. - Web 学び]]

   #+begin_src emacs-lisp
(require 'swoop)
(global-set-key (kbd "M-o")   'swoop)
(global-set-key (kbd "C-M-o") 'swoop-multi)
;; (global-set-key (kbd "M-o")   'swoop-pcre-regexp)
(global-set-key (kbd "C-S-o") 'swoop-back-to-last-position)

(define-key isearch-mode-map (kbd "M-o") 'swoop-from-isearch)
(define-key swoop-map (kbd "M-o") 'swoop-multi-from-swoop)
	
;; サイズ変更禁止
(setq swoop-font-size-change: nil)
   #+end_src

** imenu
   関数一覧を表示する.
   そのままだと動かなかったので, いかのリンクを参考にした.
   - [[http://qiita.com/lambdasakura@github/items/ceb9bc6fb008c959ec4b][Emacs の Python 開発環境構築メモ - Qiita]]

#+begin_src emacs-lisp
(semantic-mode 1) 
(add-hook 'python-mode-hook
  (lambda ()
    (setq imenu-create-index-function 'python-imenu-create-index)))
#+end_src

* リファクタリング
  主に名前変更の Elisp を導入.

  参考リンク:
  - [[http://stackoverflow.com/questions/28796/what-refactoring-tools-do-you-use-for-python][What refactoring tools do you use for Python? - Stack Overflow]]
  
** anzu
   インタラクティブな補完.
   - [[https://github.com/syohex/emacs-anzu][syohex/emacs-anzu]]

** iedit
   C-;から気軽に同じキーワードを編集できる.
   - [[http://www.emacswiki.org/emacs/Iedit][EmacsWiki: Iedit]]

** Ropemacs
   Python 用のリファクタリングツール.
   - [[http://rope.sourceforge.net/ropemacs.html][ropemacs, rope in emacs]]
   
* コーディング支援
** jedi
   Python のオムニ補完 (かしこい補完) をしてくれる.
  - [[http://qiita.com/yuu116atlab/items/2a62cb880ac863dcc8ef][emacs-jedi の install - Qiita]]

** ac-python
   auto-complete の python 強化版.

#+begin_src emacs-lisp
 (require 'ac-python)
 (add-to-list 'ac-modes 'python-2-mode)
#+end_src

** quickrun
   quickrun を利用すれば, python コードを Emacs から実行可能.
   - https://github.com/syohex/emacs-quickrun

   システムの version が 3 で, Emacs からは 2 を利用したいときは,
   以下のようにすれば実行コマンドをオーバライドできる.
   
#+begin_src emacs-lisp
(quickrun-add-command "python"
		      '((:command . "python2"))
		      :override t)
#+end_src

* 静的解析
** flymake
   flymake でエラーチェックを実施. 
   エラーチェックのエンジンに pyflakes を利用する.

   #+begin_src bash
   $ sudo pip install pyflakes
   #+end_src

   Emacswiki を参考に設定.
   - [[http://www.emacswiki.org/PythonProgrammingInEmacs][EmacsWiki: Python Programming In Emacs]]

#+begin_src emacs-lisp
(when (load "flymake" t)
  (defun flymake-pyflakes-init ()
     ; Make sure it's not a remote buffer or flymake would not work
     (when (not (subsetp (list (current-buffer)) (tramp-list-remote-buffers)))
      (let* ((temp-file (flymake-init-create-temp-buffer-copy
                         'flymake-create-temp-inplace))
             (local-file (file-relative-name
                          temp-file
                          (file-name-directory buffer-file-name))))
        (list "pyflakes" (list local-file)))))
  (add-to-list 'flymake-allowed-file-name-masks
               '("\\.py\\'" flymake-pyflakes-init)))
#+end_src

* さいごに
** Environment
   - ArchLinux
   - Emacs 24.4

** Special Thanks
   - [[http://www.emacswiki.org/PythonProgrammingInEmacs][EmacsWiki: Python Programming In Emacs]]
   - [[http://www.jesshamrick.com/2012/09/18/emacs-as-a-python-ide/][Emacs as a Python IDE - Jessica Hamrick]]
   - [[http://pedrokroger.net/configuring-emacs-python-ide/][Configuring Emacs as a Python IDE - Pedro Kroger]]
   - [[http://uchikoshi22.hatenadiary.jp/entry/20110925/1316936253][Emacs を Python 用 IDE としてセットアップ - uchikoshi22's blog]]
   - [[http://d.hatena.ne.jp/cou929_la/20110525/1306321857][emacs の python 開発環境を整える - フリーフォーム フリークアウト]]
   - [[http://blog.kzfmix.com/entry/1334218401][Emacs の Python 開発環境を整えた]]
   - [[http://lambdalisue.hatenablog.com/entry/2013/06/23/071344][Vim を最強の Python 開発環境にする 2 - Λ Lisue's blog]]
   - [[https://github.com/gabrielelanaro/emacs-for-python][gabrielelanaro/emacs-for-python]]
