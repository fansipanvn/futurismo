#+BLOG: Futurismo
#+POSTID: 2490
#+DATE: [2014-06-08 日 15:34]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil TeX:nil
#+CATEGORY: 技術メモ
#+TAGS: ansible, ArchLinux
#+DESCRIPTION: ansibleを利用して、デスクトップ環境を管理します
#+TITLE: 自分のデスクトップ環境の歴史を記録する！ansibleで設定ファイルをクラウド管理する方法

* はじめに
いままで、このブログには自分がPCで実施した設定を技術メモとして書いてきた。

自宅でためした内容を会社でも実施することがかなりある。
どうせならば、ブログとして残すとともに、実行可能なスクリプトとして残したい。

ということで、構成管理ツールである、Ansibleを試すことにした。

今回は、ローカルマシン(ArchLinux)の設定を目的にして試してみます。

ちなみに、関連記事は以下。

- [[http://futurismo.biz/archives/1325][自分のプログラミング開発環境の歴史を記録する！githubで設定ファイル(dotfiles)をクラウド管理する方法 | Futurismo]]

** Environment
- Arch Linux
- Python 3.5

* Ansibleのインストール
Ansibleとは、いわゆる構成管理ツール。サーバの設定を自動化することができる。

- [[http://www.ansible.com/home][Ansible is Simple IT Automation]]

#+begin_src language
sudo pacman -S ansible
#+end_src

ちなみに、以下の方法ではbuildでエラーした。なんでかな？

#+begin_src language
# pip
sudo pacman -S python-pip
sudo pip install ansible
# easy_install
sudo pacman -S python-setuptools
sudo easy_install ansible
#+end_src

* Ansibleをつかってみる
** ping
pingコマンドというのがあり、これでインストール後の疎通確認ができる。

#+begin_src language
mkdir ansible
cd ansible
echo 'localhost' > host
ansible localhost -m ping -i hosts
#+end_src

hostsというのはインベントリファイルという。
インベントリファイルに登録されたホストにのみansibleは実行可能。

- [[https://github.com/yteraoka/ansible-tutorial/wiki/Inventory-File][Inventory File · yteraoka/ansible-tutorial Wiki]]

** localで利用する
公式Docによると2つの方法がある。

#+begin_src language
# コマンドラインから --connection=localを設定
ansible-playbook playbook.yml --connection=local

# playbookに以下を記述
- hosts: 127.0.0.1
  connection: local
#+end_src

** gitを入れてみる
以下の記事を参考に、gitをインストールしてみる。

- [[http://qiita.com/itiut@github/items/e8b95ac9b9ea2a6ea701][AnsibleをUbuntuのローカルで使う - Qiita]]

#+begin_src language
---
- hosts: localhost
  user: tsu-nera
  tasks:
    - name: "git"
      pacman: name=git
      sudo: yes
#+end_src

コマンドラインから実行。-K オブションでパスワードを聞かれる。

#+begin_src language
ansible-playbook site.yml -i hosts -K
#+end_src

-i hostsは環境変数を設定することで省略可能。

#+begin_src language
export ANSIBLE_HOSTS=~/.ansible/hosts
#+end_src

/etc/sudoersで以下の一行を追加することで、-Kも書略できる。

#+begin_src language
# visudo
username ALL=(ALL) NOPASSWD:ALL
#+end_src

* NTPの設定をしてみる
NTPの設定を自動化してみる。

- [[http://futurismo.biz/archives/1487][CentOSで日本標準時の時刻をntpで取得するためのメモ | Futurismo]]

** 実施手順
#+begin_src language
# ntpのインストール
pacman -S ntp
# ntpサーバへの接続設定
cp ntp.conf /etc/ntp.conf
#+end_src

/etc/ntp.confの内容は以下。

#+begin_src language
# With the default settings below, ntpd will only synchronize your clock.
#
# For details, see:
# - the ntp.conf man page
# - http://support.ntp.org/bin/view/Support/GettingStarted
# - https://wiki.archlinux.org/index.php/Network_Time_Protocol_daemon

# Associate to public NTP pool servers; see http://www.pool.ntp.org/
server -4 ntp.nict.jp
server -4 ntp1.jst.mfeed.ad.jp
server -4 ntp2.jst.mfeed.ad.jp
server -4 ntp3.jst.mfeed.ad.jp

# Only allow read-only access from localhost
restrict default nomodify nopeer noquery
restrict 127.0.0.1
restrict ::1

driftfile /var/lib/ntp/ntp.drift
logfile /var/log/ntp.log
#+end_src

こうなった。以下を参考にしたけれども、途中でわからなくなった。
すみませんが、リンク先参照ということで。

- [[https://gist.github.com/phillipuniverse/7721288][Set up NTP with Ansible, dedicating one as a timelord]]

#+begin_src language
---
- hosts: localhost
  sudo: yes
  tasks:
    - name: Install NTP
      pacman: name=ntp

    - name: Copy over the NTP configuration
      copy: src=files/ntp.conf dest=/etc/ntp.conf owner=root group=root mode=0644
#+end_src

** ArchLinuxの設定を書いてみる

ArchLinuxで利用するツールをyamlファイルで管理。

#+begin_src yaml
---
- hosts: localhost
  sudo: yes
  tasks:
    - name: install IM
      pacman: name=ibus-anthy

    - name: install utilities
      pacman: name=curl,wget,openssh

    - name: install login manager
      pacman: name=slim,archlinux-themes-slim,slim-themes

    - name: window manager
      pacman: name=xmonad,xmonad-contrib,dmenu,xmobar,xorg-xev

    - name: Install NTP
      pacman: name=ntp

    - name: Copy over the NTP configuration
      copy: src=files/ntp.conf dest=/etc/ntp.conf owner=root group=root mode=0644

    - name: Install multimedia
      pacman: name=flashplugin,alsa-utils
#+end_src

* まとめ
デスクトップをプレーンテキストでバージョン管理したい。

dotfilesで設定を管理することを、一歩おしすすめて、OS自体を管理したい。

調べながらなので、今回の設定は時間がかかり、またpacmanくらいしかつかいこなせていない。
けれども、これからこのdotansiblesも成長させていく。
ansibleはとてもシンプルな仕様なので、覚えるのも時間がかからないはずだ。

- [[https://github.com/tsu-nera/dotansible][tsu-nera/dotansible]]

調べてみると、dotfilesを管理するようにansibleでdesktopを管理するも流行ってる？

- https://github.com/RaymiiOrg/ansible
- https://github.com/francisbesset/ansible-playbooks
- https://github.com/sheldonh/dotfiles-ansible
- https://github.com/ahtik/dotdotbox/

dotfilesと同じように、少しずつ自分の成長過程をプレーンテキストで管理して記録していく。

* BookMarks
** 公式Doc
- [[http://docs.ansible.com/index.html#][Ansible Documentation — Ansible Documentation]]

日本語訳
- [[https://github.com/shkumagai/ansible-doc-ja][shkumagai/ansible-doc-ja]]vv

** チュートリアル

- [[http://yteraoka.github.io/ansible-tutorial/][Ansible チュートリアル | Ansible Tutorial in Japanese]]
- [[http://apatheia.info/blog/2013/04/06/about-ansible/][構成管理ツール Ansible について - apatheia.info]]
- [[http://qiita.com/seizans/items/54da2077ac8e2dcf5d6f][vagrant - Ansible コトハジメ - Qiita]]
- [[http://demand-side-science.jp/blog/2014/ansible-in-wonderland-01/][不思議の国のAnsible – 第1話 – DSS Tech Blog]]
- [[http://tdoc.info/blog/2013/04/20/ansible.html][ansibleを使ってみる — そこはかとなく書くよん。]]
- [[http://docs.ansible.com/pacman_module.html][pacman - Manage packages with pacman — Ansible Documentation]]
- [[http://d.hatena.ne.jp/akishin999/20130815/1376520672][Ansible の Playbook を使ってみる - akishin999の日記]]
- [[http://www.infiniteloop.co.jp/blog/2013/08/ansible/][はじめてAnsibleを使う人が知っておきたい7つのモジュール]]

ローカルで利用する。
- [[http://cloverrose.hateblo.jp/entry/2013/09/07/112153][Ansibleをローカルで使ってみた - cloverrose's blog]]
- [[http://qiita.com/itiut@github/items/e8b95ac9b9ea2a6ea701][AnsibleをUbuntuのローカルで使う - Qiita]]

Ansibleの哲学・アーキ。
- [[http://tdoc.info/blog/2014/01/20/ansible_beyond_configuration.html][Ansibleのアーキテクチャー: 構成管理を超えて — そこはかとなく書くよん。]]

ansible bestpractice.
- [[http://docs.ansible.com/playbooks_best_practices.html#always-name-tasks][Best Practices — Ansible Documentation]]

** その他
- [[http://qiita.com/advent-calendar/2013/ansible][Ansible Advent Calendar 2013 - Qiita]]

