#+OPTIONS: toc:nil
* Cryptography
  暗号技術についてのまとめ

  - [[http://ja.wikipedia.org/wiki/%E6%9A%97%E5%8F%B7][暗号 - Wikipedia]]
  - [[http://ja.wikipedia.org/wiki/%E6%9A%97%E5%8F%B7%E7%90%86%E8%AB%96][暗号理論 - Wikipedia]]

* 共通鍵暗号
  暗号化と復号に同一の (共通の) 鍵を用いる暗号方式.

** AES
  アメリカ国防省のの暗号方式.

  - [[http://ja.wikipedia.org/wiki/Advanced_Encryption_Standard][Advanced Encryption Standard - Wikipedia]] 

** DES (ブロック暗号)
** RC4 (ストリーム暗号)
** ワンタイムパッド

* 公開鍵暗号
  暗号化と復号に別個の鍵 (手順) を使い,
  暗号化の為の鍵を公開できるようにした暗号方式.

  - 暗号鍵で lock したものは公開鍵でしか unlock できない
  - 公開鍵で lock したものは秘密鍵でしか unlock できない

** デメリット
   - 基本的に一方通行の使い方しかできない.
   送信側に対して今度は受信側から暗号化したデータを送信しようとする場合, 
   送信側で秘密鍵と公開鍵を作成し, 公開鍵を公開しておく必要があります.

   - 処理が複雑になるため処理速度が遅くなる傾向がある

** デジタル署名
   秘密鍵で lock して, 公開鍵で unlock する.

** RSA
   桁数が大きい合成数の素因数分解問題が困難であることを
   安全性の根拠とした公開鍵暗号の一つ.

   - [[http://ja.wikipedia.org/wiki/RSA%E6%9A%97%E5%8F%B7][RSA 暗号 - Wikipedia]]

   大学で 2 回も同じ講義をうけたけど, すっかり忘れたというもの.

** 楕円曲線暗号 (ECC)
   - [[http://ja.wikipedia.org/wiki/%E6%A5%95%E5%86%86%E6%9B%B2%E7%B7%9A%E6%9A%97%E5%8F%B7][楕円曲線暗号 - Wikipedia]]

   これも大学でやったけど, すっかり忘れたというもの.
   
** ElGamal

* 暗号化通信
** SSH
  - [[http://ja.wikipedia.org/wiki/Secure_Shell][Secure Shell - Wikipedia]]
  - [[http://www.adminweb.jp/web-service/ssh/index4.html][共通鍵暗号と公開鍵暗号の解説と SSH での認証手順 - Web サービスの始め方]]

** SSL
*** SSH と SSL の違い
    SSH は AP 層で認証・暗号化を行います.
    SSL/TLS は, AP 層の下の層での認証・暗号化を行うものです.

    - SSH
      -  OSI : Application Layer (7 層) に位置.
      - クライアントとサーバ間の全てのトラフィックを完全に暗号化.
      - コマンドラインなど CUI アクセスや管理コンソールアクセスの場合に利用される.
      - Version2 では, 第三者が交換データを偽造に対し保護機能がある.
    - SSL / TLS
      - OSI : Transport Layer (4 層) の上位に位置.
      - HTTP/Web トラフィックを代表とし, SMTP,POP,IMAP などのトラフィックをセキュリティ保護する場合に利用.
      - 暗号化,認証,改竄検出の機能を提供.

**** links
  - [[http://stanimoto.blogspot.jp/2009/06/sshssltls.html][SE のめも: SSH と SSL/TLS の違い]]
  - [[http://storage-system.fujitsu.com/jp/products/diskarray/feature/d16/][SSL/SSH による強固なセキュリティ : 富士通]]

** HTTPS

* 認証
** PKI
   公開鍵基盤は, 利用者の身元について「信頼できる第三者」
   が審査を行い, 保証を実現する仕組み.

  -  [[http://ja.wikipedia.org/wiki/%E5%85%AC%E9%96%8B%E9%8D%B5%E5%9F%BA%E7%9B%A4][公開鍵基盤 - Wikipedia]]

** BASIC 認証
   HTTP で定義される認証方式の一つ.

   - Basic 認証では, ユーザ名とパスワードの組みをコロン ":" でつなぐ
   - Base64 でエンコードして送信する. 
   - 盗聴や改竄が簡単
   - ほぼ全ての Web サーバおよびブラウザで対応している

  参考リンク.

  - [[http://ja.wikipedia.org/wiki/Basic%E8%AA%8D%E8%A8%BC][Basic 認証 - Wikipedia]]
  - [[http://allabout.co.jp/gm/gc/23780/][基本認証でアクセス制限をかける方法 All About]]

*** Appatch での設定

    - ウェブサーバの設定を記述する「.htaccess 」ファイル
    - 基本認証用の ID とパスワードを記述する「.htpasswd 」ファイル

** LDAP 認証
   LDAP は, ディレクトリ・サービスに接続するために使用されるプロトコル

   - [[http://ja.wikipedia.org/wiki/Lightweight_Directory_Access_Protocol][Lightweight Directory Access Protocol - Wikipedia]]

   インターネットやイントラネットなどの TCP/IP ネットワークで, ディレクトリデー
   タベースにアクセスするためのプロトコル. 

  - [[http://e-words.jp/w/LDAP.html][LDAP とは 【 Lightweight Directory Access Protocol 】]]

*** ディレクトリサービス
    ディレクトリサービスとは, ネットワークを利用するユーザのメール
    アドレスや環境に関する情報を管理するサービスのことで, ユーザ名
    からこれらの情報を検索することができる.

    - 読み取りが高速
    - 分散型の情報格納モデル
    - 高度な検索機能を持つ

    メールアドレス管理とかも. 

** NTLM 認証
   Windows NT 4.0 以前の Windows NT シリーズの OS で標準的に使われていた,
   ネットワークログオンのためのユーザ認証方式. NT 4.0 の後継にあたる
   Windows 2000 からはデフォルトの認証方式に Kerberos 認証が採用されたが,
   旧環境との互換性を保つため NTLM 認証も利用可能となっている.

  - [[http://e-words.jp/w/NTLME8AA8DE8A8BC.html][NTLM 認証とは 【 Windows NT LAN Manager authentication 】 ]]
  - [[http://www.st.rim.or.jp/~shio/csm/ntlm/][Windows NTLM 認証とマン・イン・ザ・ミドル攻撃]]

*** チャレンジ/ レスポンス方式
    - クライアントがサーバに対し, ユーザ認証の要求を発行する
    - サーバは認証要求を受け, ランダムなバイト列「チャレンジ」を送り返す
    - クライアントは, チャレンジとパスワード情報に基づいて「レスポンス」
      を生成し, サーバに送る
    - サーバ側でも先ほど送ったチャレンジとパスワード情報を基にレスポンスを生成する
    - クライアントから送られたレスポンスと, 自ら生成したレスポンスを比
      較することにより, クライアント側とサーバ側両方のパスワード情報が
      同一であることを確認する
    - パスワード情報の同一性が確認できた場合, クライアントにログオン許可を与える
    - クライアント側ではログオン許可を受け, ログオン処理を実行する    

** ケルベロス認証
   共通鍵暗号によって暗号化.

   - [[http://ja.wikipedia.org/wiki/%E3%82%B1%E3%83%AB%E3%83%99%E3%83%AD%E3%82%B9%E8%AA%8D%E8%A8%BC][ケルベロス認証 - Wikipedia]]
   - [[http://itpro.nikkeibp.co.jp/article/Keyword/20140114/529698/][Network キーワード - Kerberos 認証:ITpro]]

   このページにアニメーションつきの鍵のやりとりがある.

   - [[http://www5e.biglobe.ne.jp/%257eaji/3min/ex/sup05.html][3 Minutes Networking Supplement No.05]]
** OAuth
   API 利用側が, ユーザ認証を API 提供サービス側にやってもらうための仕様.

   - [[http://ja.wikipedia.org/wiki/OAuth][OAuth - Wikipedia]]
   - [[http://yuroyoro.hatenablog.com/entry/20100506/1273137673][OAuth プロトコルの中身をざっくり解説してみるよ ]]


   OAuth は, 以下の特徴を持つ「認可情報の委譲」のための仕様です.

   - あらかじめ信頼関係を構築したサービス間で
   - ユーザの同意のもとに
   - セキュアにユーザの権限を受け渡しする

*** 登場人物
   - 1 つ目は OAuth Service Provider と呼ばれる, 
     ユーザの認可情報を第三者に渡すサービス. 
   - 2 つ目は OAuth Consumer と呼ばれる, Service Provider から認可情報を受け取り, 
     ユーザに代っていろいろな情報にアクセスしたり変更/ 追加を行ったりするサービス.
   - 3 つめが, User です. 
     User は Service Provider が Consumer に認可情報を渡すことを許可したり, 
     すでに受け渡した認可情報を無効にするといったことができます
