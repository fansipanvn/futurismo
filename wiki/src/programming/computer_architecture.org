#+OPTIONS: toc:nil
* コンピュータ・アーキテクチャ
  コンピュータ (特にハードウェア) における基本設計や設計思想などの基本設計概念.

  - [[http://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BB%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3][コンピュータ・アーキテクチャ - Wikipedia]]

  3 つのサブカテゴリがある.
  - 命令セットアーキテクチャ (ISA)
  - マイクロアーキテクチャ
  - システムアーキテクチャ

* 命令セットアーキテクチャ
  -> アセンブリ言語のページを参照.

** 概要
  - RISC, CISC, VLIW, EPIC アーキテクチャ

* マイクロアーキテクチャ
** 概要
   - 演算アーキテクチャ
   - 浮動小数点, 演算装置, SIMD/MIMD, ベクトル演算ユニット (ベクトル計算機)
   - CPU 制御アーキテクチャ
   - ワイヤードロジック, マイクロプログラム (マイクロアーキテクチャ), 実行ユニット, 制御装置
   - CPU 高速化アーキテクチャ
   - パイプライン, スーパースケーラ, アウト・オブ・オーダー実行, 分岐予測, レジスタ・ウィンドウ, レジスタ・リネーミング, 投機的実行
   - CPU バスアーキテクチャ
   - CPU バス (CPU 内部バス, CPU 外部バス《ピン》アーキテクチャ)
   - マルチプロセッサアーキテクチャ
   - 対称型マルチプロセッサ (SMP), NUMA (ASMP), クロスバースイッチ <スタブ>
   - マルチスレッドアーキテクチャ
   - ブロック型マルチスレッディング, インターリーブ型マルチスレッディング, 同時マルチスレッディング

* システムアーキテクチャ
** 概要
   - 制御アーキテクチャ
   - 割り込み制御, 入出力制御
   - バスアーキテクチャ
   - ハーバードアーキテクチャ, プログラム内蔵方式 (ノイマン型を含む)
   - クロスバースイッチ
   - システムバス, メモリバス, 入出力バス.
   - メモリアーキテクチャ
   - キャッシュメモリ, 仮想記憶, TLB  <スタブ> -- メモリ
   - ネットワークアーキテクチャ
   - <スタブ> -- コンピュータネットワーク
   - オペレーティングシステムアーキテクチャ
   - ページング方式アーキテクチャ. <スタブ>
   - 分散処理アーキテクチャー

** Memory Architecture
*** ROM
    書き込んだデータは消去できないが, 電源を切ってもデータが消えない読み出し専用のメモリ.

*** RAM
    データの読み書きは自由に行えるが, 電源を切ると内容が消えるメモリ (Random Access Memory)

** Cache Architecture
   ある領域から他の領域へ情報を転送する際, 
   その転送遅延を極力隠蔽化させ転送効率を向上させるために考案された記憶階層の実現手段である.

   - [[http://ja.wikipedia.org/wiki/%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5_(%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0)][キャッシュ (コンピュータシステム) - Wikipedia]]
   - [[http://ja.wikipedia.org/wiki/%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5%E3%83%A1%E3%83%A2%E3%83%AA][キャッシュメモリ - Wikipedia]]

   たとえば, 
   - Memory -> Cache -> CPU
   - Memory -> Cache -> HDD

*** Memory Hierarchy

    | registers          |             |
    | L1 Cache           | SRAM        |
    | L2 Cache           | SRAM        |
    | Memory             | DRAM        |
    | local 2nd storage  | local disks |
    | remote 2nd storage | Web Servers |

*** Locality
    局所性.

    Programs tend to use data and instructions 
    with addresses near or equal to those they have used recently.

    - [[http://ja.wikipedia.org/wiki/%E5%8F%82%E7%85%A7%E3%81%AE%E5%B1%80%E6%89%80%E6%80%A7][参照の局所性 - Wikipedia]]

**** 時間的局所性 (英: temporal locality)
     ある時点で参照されたリソースが近い将来にも再び参照される可能性が高いことを表す概念
**** 空間的局所性 (英: spatial locality)
     あるリソースが参照されたとき, その近傍のリソースが参照される可能性が高いことを表す概念
**** 逐次的局所性 (英: sequential locality)
     メモリが逐次アクセスされるという概念       

*** Associativity
    キャッシュメモリはデータを Block (Line) と呼ぶある程度まとまった単位で管理する.
    複数セットのタグを持てば同じエントリアドレスでも複数データの格納を行うことが可能となる.
    このタグのセット数 (ウエイ) を連想度と呼ぶ. データ格納構造の相違は連想度の相違でもある.

**** ダイレクトマップ方式 (Direct Mapped)
     1 組のタグにより構成 (連想度 1) されるデータ格納構造. 
     pp    アドレスにより一意に配置が決まるため, タグの構造が非常に単純. 
     だが, 同一エントリに異なるフレームアドレスが転送されると必ずラインの入れ替えが発生する. 

     - [[http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/Memory/direct.html][Direct Mapped Cache]]

**** セットアソシアティブ方式 (Set Associative)
     複数のタグにより構成 (連想度 2 以上) されるデータ格納構造. 
     同一エントリに異なるフレームアドレスのデータを複数格納することができる. 
     連想度が上がるほどキャッシュヒット率は上昇するが製造は困難になっていくため, 
     システムによりバランスのよい実装が異なる. 

     - [[http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/Memory/set.html][Set Associative Cache]]

**** フルアソシアティブ方式 (Fully Associative)
     エントリアドレスによる振り分けはなく, 全てのラインが検索対象となる構造. 
     従って連想度はライン数分となる. キャッシュスラッシングは起こり難くヒット率は最も優れているが, 
     実装コストや複雑度の面から通常用いられることはない.

*** General Cache Organization
    Block (Line), Set という概念を踏まえ, 一般的なキャッシュ構造は以下になる.

**** Cache Structure
     
     #+begin_src language
     Cache size = Block size 
               	x 連想数 (2 の倍数)
               	x Set 数 (2 の倍数)
     #+end_src

     | Block | .... | Block |
     | Block | .... | Block |
     | Block | .... | Block |
     | Block | .... | Block |
     | Block | .... | Block |

**** Set Structure

     1 Set は, Block の集合.集合の size が associativity.

     | Block | .... | Block |

**** Block Structure
     - tags ... 同一 set のなかで一位に識別するための情報.
     - set index ... xxx 個のアドレスを yyy 個に圧縮するためのハッシュキー. 
       ここが何ビットになるかは associativity の決め方次第.
     - block offset ... x bit を 2 の倍数 bit に収めるための offset.
     - data  ... メインメモリからロードしたデータ

     | tags | set index | block offset | data |
     
     #+begin_src language
     ex.) 0x1833 .... 0000...... 0011 0011
     -> 0011 は block offset として使わない.
     -> 011 が index
     #+end_src


** Virtual Memory
   仮想メモリ.メモリ管理技法の一種であり, マルチタスクオペレーティング
   システムが不連続なメモリ領域をソフトウェア (プロセスなど) から見て
   連続になるように見せかけるもの.

   - [[http://ja.wikipedia.org/wiki/%E4%BB%AE%E6%83%B3%E8%A8%98%E6%86%B6][仮想記憶 - Wikipedia]]

   セグメント方式とページング方式の二つの方法がある.

*** 関節参照
    indirection.
    値を, 値を表すものそのもの直接によってではなく, 名前や参照などによ
    り間接的に, 指し示すことおよびその参照や, それを参照して操作すること 

   - [[http://ja.wikipedia.org/wiki/%E9%96%93%E6%8E%A5%E5%8F%82%E7%85%A7][間接参照 - Wikipedia]]

   CS の世界での問題解決の常套手段.

*** MMU
    コンピュータ内部の部品.
    仮想アドレスを物理アドレスに変換する機能をもつ, (ほかの仕事もしている)

    - [[http://ja.wikipedia.org/wiki/%E3%83%A1%E3%83%A2%E3%83%AA%E7%AE%A1%E7%90%86%E3%83%A6%E3%83%8B%E3%83%83%E3%83%88][メモリ管理ユニット - Wikipedia]]

*** ページング方式
    記憶装置をページと呼ばれる小さな単位に分割して割り当てを行うアルゴ
    リズム群である. 仮想記憶のベースとなる設計の一つ.

    - [[http://ja.wikipedia.org/wiki/%E3%83%9A%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E6%96%B9%E5%BC%8F][ページング方式 - Wikipedia]]

   仮想メモリ番号と物理メモリ番号を対応づけるテーブル.

**** Pages
     バーチャルメモリ上のキャッシュをとくに Pages という.

**** Page Tables
     ページテーブル (Page Table) とは, コンピュータのオペレーティング
     システムにおけるページング方式の仮想記憶システムで使われるデータ
     構造であり, 仮想アドレスと物理アドレスのマッピングを格納するもの
     である. 仮想アドレス空間はプロセス毎に割り当てられ, 物理アドレス
     はシステム全体で RAM などを配置するアドレス.

     - [[http://ja.wikipedia.org/wiki/%E3%83%9A%E3%83%BC%E3%82%B8%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB][ページテーブル - Wikipedia]]

     ベージテーブルの先頭には valid flag があるので, まずはそれで参照し
     たメモリか有効かどうかを判定する.

     共有ライブラリは, read only なため, この領域に対して write アクセス
     があると, Page Fault 例外が発生する.

     Disk にある? それだ参照のオーバヘッドが大きいので, TLB がある.

**** Page Fault
     物理メモリ空間に対応づけられていない論理メモリを参照した時にはペー
     ジフォルトという例外によって OS 側の例外処理ルーチンに制御が移行し,
     OS 側の管理によって適宜対応したページを二次記憶等から読み込み, テー
     ブルを更新してその参照した命令の実行に戻る.

**** 仮想メモリに関わる 3 つのテーブル
     - TLB ... MMU
     - Page Table ... DRAM
     - Cache ... DRAM
**** TLB
     メモリ管理ユニット (MMU) 内のある種のキャッシュであり, 仮想アドレスから物
     理アドレスへの変換の高速化を図るもの.

     - [[http://ja.wikipedia.org/wiki/%E3%83%88%E3%83%A9%E3%83%B3%E3%82%B9%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%83%BB%E3%83%AB%E3%83%83%E3%82%AF%E3%82%A2%E3%82%B5%E3%82%A4%E3%83%89%E3%83%BB%E3%83%90%E3%83%83%E3%83%95%E3%82%A1][トランスレーション・ルックアサイド・バッファ - Wikipedia]]

     TLB は「 PTE 専用のキャッシュ」.
     - [[http://ascii.jp/elem/000/000/567/567889/index-2.html][ASCII.jp:仮想メモリーを支えるもうひとつのキャッシュ TLB ]]

*** セグメント方式
