#+OPTIONS: toc:nil
#+TITLE: Cloud Computing
クラウドコンピューティング

* Cloud とは
  *Lots of storage + compute cycles nearby* (from: coursera)

  とくに, 現在 (2015) は以下の新しい特徴が注目されている
  - Massive scale
    巨大なスケールのデータセンター. クラスター.
  - On-demand access
    お金を払えば誰でもアクセス可能.
    - HaaS
  - Data-intensive Nature
    データの増大
  - New Cloud Programming Paradiums
    (MapReduce, Hadoop, NoSQL, Cassendra, MongoDB)

** 構成要素
  A Single-site cloud (=Datacenter) は以下で構成される.
  - Compute nodes
  - Switches, connecting the racks
  - A network topology, hierachical
  - Storage
  - Front-end for submitting jobs and receiving client requests
  - Software Services

  A geographically distributed cloud は single-site cloud を連携させる.
  - core switch
  - top of rack switch
  - rack
  - servers

* On-Demmand Access
   オンデマンドアクセス. 以下のような技術背景がある.
   - Computation-Intensive Computing 演算処理の集中
   - Data Intensive データの集中

   データの集中によって, 注目は computationn から data に変わった.

   計算技術は CPU の高速化よりも, 
   Disk や Network の I/O がボトルネックになってきた.

** 分類
 - Public cloud
   お金を払えばだれでも利用できる.
   - Amazon EC2
   - Amazon S3

   セットアップ不要. 時間とお金を節約できる.
  
 - Private cloud
   会社の社員が利用できる.

** ASS Classification 
  - [[http://www.kobelcosys.co.jp/column/itwords/26/][クラウド上で発展する様々なサービス「 SaaS ・ PaaS ・ IaaS 」|コベルコシステム]]

*** PaaS
    Platform as a Service
    ソフトウェアを構築および稼動させるための土台となるプラットフォームを, 
    インターネット経由のサービスとして提供する.

    -  [[http://ja.wikipedia.org/wiki/Platform_as_a_Service][Platform as a Service - Wikipedia]]

    アプリケーションソフトが稼動するためのハードウェアや OS などの基盤 (プ
    ラットフォーム) 一式を, インターネット上のサービスとして遠隔から利用
    できるようにしたもの.

    - [[http://e-words.jp/w/PaaS.html][PaaS とは 【 Platform as a Service 】 - IT 用語辞典]]

*** IaaS
    Infrastrucure as a Service.

    仮想化技術を利用して CPU, ストレージ, OS, ミドルウェアなど, 
    システムを構成するためのインフラをインターネット経由で提供するサービス.

    - プロバイダーは基板となるストレージ, ネットワーク,
       コンピューティングリソースを管理し, 提供
    - OS や FireWall のようなネットワーク制御コンポーネントなどのアプリケーションを
      デプロイ, 実行, コントロールすることが可能です.

    VM 上でサービスを提供する.

*** SaaS 
    Software as a Service
    - Evernote
    - Google mail

* MapReduce
  クラスター上での巨大なデータセットに対する
  分散コンピューティングを支援する目的で, 
  Google によって 2004 年に導入されたプログラミングモデル.
  - [[http://ja.wikipedia.org/wiki/MapReduce][MapReduce - Wikipedia]]

  関数型プログラミングの map/reduce を参考にしている.
  
#+begin_src scheme
(map square '(1 2 3 4))

(reduce + '(1 2 3 4))
#+end_src

   MapReduce の後継として, Spark, Tez が注目を集めている.
   - [[http://itpro.nikkeibp.co.jp/atcl/column/14/072800028/073000001/][ビッグデータを支える人々 - MapReduce は「ゆっくり死んでいく」, Hadoop 開発者のカッティング氏:ITpro]]

** Hadoop
   もっとも有名な MapReduce のオープンソース実装 (Java)
   - [[http://ja.wikipedia.org/wiki/Apache_Hadoop][Apache Hadoop - Wikipedia]]

*** HDFS
    Hadoop 独自のファイルシステムである. 
    HDFS は各 OS が提供するファイルシステム上で動作し, 
    数ペタバイトの容量まで拡張するよう設計している.

*** YARN
    Yet Another Resource Negociator.

    Hadoop のスケジューラ. 
    Node に仕事を割り当てる順番を制御する.

** Distributed File Systems (DFS)
   複数のサーバに点在するフォルダを
   一つのフォルダツリーのように扱う技術.

   ファイルシステムの仮想化技術. 
   - GFS
   - HDFS

* Multicast/Broadcast
  

* Software Defined Infrastructure
  ソフトウェアを中心としたインフラ構築のビジョン.

#+begin_quote
Software-defined data center (SDDC) is a vision for IT infrastructure 
that extends virtualization concepts such as abstraction, pooling, 
and automation to all of the data center's 
resources and services to achieve IT as a service (ITaaS)
#+end_quote

- [[http://en.wikipedia.org/wiki/Software-defined_data_center][Software-defined data center - Wikipedia, the free encyclopedia]]
- [[http://en.wikipedia.org/wiki/Software_Defined_Infrastructure][Software Defined Infrastructure - Wikipedia, the free encyclopedia]]

#+begin_quote
「 Software Defined 」とは「 (手作業ではなく) ソフトウェアで定義・制御する環境」
を実現する, または目指すという意味
#+end_quote

- [[http://www.ctc-g.co.jp/report/column/it_sdi/index.html][よくわかる IT 新発見  第 1 回  「 Software Defined xx 」の潮流を読み解く!|伊藤忠テクノソリューションズ]]
- [[http://itpro.nikkeibp.co.jp/article/COLUMN/20131127/521113/][漆原茂の技術インパクト - 第 10 回  Software Defined Everything:ITpro]]

** 各ベンダの動向
*** Intel - Software Defined Infrastructure (SDI)
データセンターのサーバー, ネットワーク, ストレージを統合する戦略.

#+BEGIN_HTML
<blockquote>
SDI の大きな特徴は, コンピュート (CPU, メモリ), ネットワーク, ストレージなど, データセンターを構成するハードウェアをすべて抽象化して, ソフトウェアで自由に設定を変更することができる点

ハードウェアとソフトウェアがタイトに結びつくのではなく, ハードウェアを抽象化し, 必要に応じてソフトウェアから設定を変更するだけで, サーバーのリソース構成をダイナミックに変更できるシステムが必要になってきた
</blockquote>
#+END_HTML

- [[http://itpro.nikkeibp.co.jp/article/NEWS/20130723/493463/][米インテルが Software Defined Infrastructure を発表, ストレージとネットワークで攻勢:ITpro]]
- [[http://cloud.watch.impress.co.jp/docs/column/virtual/20130730_609512.html][【仮想化道場】"やわらかいデータセンター"を作る, Intel の Software Defined Infrastructure - クラウド Watch]]

*** Cisco - Software Defined Network (SDN)
    Software-Defined Networking.ネットワークにおける Software defined.

- [[http://gblogs.cisco.com/jp/2014/02/open-source-controller-framework-opendaylight-1/][Cisco Japan Blog » オープンソース コントローラ フレームワーク - OpenDaylight (1)]]

*** EMC - Software Defined Storage (SDS)
    EMC のとなえる戦略. ストレージにおける Software Defined.
    [[file:Storage.org::*Software%20Defined%20Storage][Software Defined Storage]]

** 実現するための Archtecture
*** Software Defined Infrastructe

    このページで紹介されているアーキテクチャがわかりやすい.
    - [[http://www.ctc-g.co.jp/report/column/it_sdi/index.html][よくわかる IT 新発見  第 1 回  「 Software Defined xx 」の潮流を読み解く!|伊藤忠テクノソリューションズ]]

    以下, 引用.
    - Orchestration ・・・ 下位の機能レイヤの API を通じて全体のプロビジョニングを実施.
    - Controller ・・・ 上位レイヤからの API を介した指示にしたがって, Device の設定変更を実施.
    - Device ・・・ 上位レイヤの API を介した指示にしたがって, 必要な IT リソースを提供.

*** Rack Scale Architecture (RSA)
    Intel が提唱するアーキテクチャ.

    - [[http://news.mynavi.jp/news/2013/04/12/141/][ラックはサーバ集積からモジュール構造へ, Intel | マイナビニュース]] 

    これはよくわかならいな.

** 実現するための技術・ OSS
*** OpenStack
*** OpenFlow
    OpenFlow とはソフトウェアによってネットワークの構成を行うための新しい標準.

- [[http://e-words.jp/w/OpenFlow.html][OpenFlow とは 〔 オープンフロー 〕 - 意味/ 解説/ 説明/ 定義 : IT 用語辞典]]

*** CloudStack
   - [[http://www.atmarkit.co.jp/ait/articles/1403/03/news019.html][プロダクトの差はわずか? 活動評価視点で検証:OpenStack と CloudStack, 違いは何? (1/2) - ＠ IT]]

*** Hydrogen

    OpenDaylight Project とは,
    SDN (Software Defined Network) のプラットフォームを開発するプロェクト.
    Linux Foundation Project のひとつ.

    #+begin_quote
    SDN の市場育成とともにこの分野の革新とユーザ環境への導入促進を目的
    に活動を開始したのが「 OpenDaylight 」です. 業界をリードする素晴ら
    しいメンバー (Platinum/Gold スポンサー:Brocade, Cisco, Citrix,
    Ericsson, IBM, Juniper, Microsoft, Redhat, NEC, VMWare) が参加し,
    複数のインダストリ プレイヤーによるコントリビューション (HackFest
    参加, ソースコード寄贈, 共同開発) によりコントローラ フレームワー
    クを形成.
    #+end_quote

    - [[http://gblogs.cisco.com/jp/2014/02/open-source-controller-framework-opendaylight-1/][Cisco Japan Blog » オープンソース コントローラ フレームワーク - OpenDaylight (1)]]

    OpenDaylight が開発したオープンソース コントローラ フレームワークが Hydrogen.

    - [[http://sourceforge.jp/magazine/14/02/06/144500][オープンソース SDN プロジェクトの OpenDaylight が初リリース, 「 Hydrogen 」が登場]]
    - [[http://www.atmarkit.co.jp/ait/articles/1402/05/news050.html][SDN のオープンソースプロジェクト:OpenDaylight Project, 最初のリリース Hydrogen を発表 - ＠ IT]]
    - [[http://gihyo.jp/dev/serial/01/linuxcon2014/0003][#3  最終回は Neela Jacques 氏に OpenDaylight について伺いました:LinuxCon Japan 2014 Preview|gihyo.jp … 技術評論社]]

** BookMarks
  - [[http://www.atmarkit.co.jp/ait/articles/1407/02/news118.html][「 AWS は称賛に値する」:OpenStack は結局, どう使われていくのか - ＠ IT]]

* Software-Defined Networking (SDN)
  -> [[file:networking.org::*SDN][Networking-SDN]]

* Immutable Infrastructure
  一度サーバーを構築したらその後はサーバーのソフトウェアに変更を加えないこと.
  - [[http://ja.wikipedia.org/wiki/Immutable_Infrastructure][Immutable Infrastructure - Wikipedia]]

  変更は設定がかかれた設定ファイル (Code) に加える.使い捨てサーバ.

  以下の説明がとてもわかりやすい.
  - [[http://www.publickey1.jp/blog/14/immutable_infrastructure_1.html][Immutable Infrastructure はアプリケーションのアーキテクチャを変えていく Publickey]]
  
  #+BEGIN_QUOTE
  Windows って調子が悪くなると再インストールしてすっきりさせるじゃないで
  すか. OS にいろんなソフトウェアをインストールしたりカスタマイズしたり
  すると調子が悪くなりますが, 再インストールすれば戻ります.

  だったら, そもそも毎回作り直せばシステムはすっきりするよね, というのが
  簡単な Immutable Infrastructure の説明です.
  #+END_QUOTE

* OpenStack
  -> [[file:openstack.org][OpenStack]]
